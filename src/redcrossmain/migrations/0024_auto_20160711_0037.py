# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-10 19:07
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('redcrossmain', '0023_auto_20160710_0335'),
    ]

    operations = [
        migrations.CreateModel(
            name='BloodDonation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('date_of_birth', models.DateTimeField()),
                ('nationality', models.CharField(max_length=50, null=True)),
                ('blood_group', models.CharField(max_length=50, null=True)),
                ('rh_factor', models.CharField(max_length=50, null=True)),
                ('father_name', models.CharField(max_length=100, null=True)),
                ('occupation', models.CharField(max_length=50, null=True)),
                ('organization', models.CharField(max_length=100, null=True)),
                ('address', models.CharField(max_length=400, null=True)),
                ('age', models.IntegerField()),
                ('telephone_no', models.IntegerField(default=0, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('mobile_number', models.IntegerField(default=0, null=True)),
                ('weight', models.DecimalField(decimal_places=3, default=0, max_digits=3, null=True)),
                ('height', models.CharField(blank=True, max_length=7, null=True)),
                ('date', models.DateTimeField()),
                ('time', models.DateTimeField()),
                ('accept_terms', models.BooleanField(default=False)),
                ('donated_blood_previously', models.BooleanField(default=False)),
                ('when_if_yes', models.CharField(blank=True, max_length=30, null=True)),
                ('discomfort_during_donation', models.BooleanField(default=False)),
                ('eaten_in_last_24_hrs', models.BooleanField(default=False)),
                ('sleep_last_night', models.BooleanField(default=False)),
                ('acute_respiratory_problem', models.BooleanField(default=False)),
                ('reason_infected', models.BooleanField(default=False)),
                ('info_share', models.BooleanField(default=False)),
                ('terms_risks', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Disease6m',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('val', models.CharField(blank=True, choices=[('UneplainedWeightLoss', 'Unexplained Weight Loss'), ('EarPiercing', 'Ear piercing'), ('RepeatedDiarrhoea', 'Repeated Diarrhoea'), ('DentalExtraction', 'Dental Extraction'), ('SwollenGland', 'Swollen Gland'), ('MajorSur', 'Major Surgery'), ('ContLowFever', 'Continuous Low-grade fever'), ('MinorSur', 'Minor Surgery'), ('Tatoo', 'Tatooing'), ('BloodTransfusion', 'Blood Transfusion')], max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Suffered',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('val', models.CharField(blank=True, choices=[('heartdisease', 'Heart Disease'), ('lungdisease', 'Lung Disease'), ('kidneydisease', 'Kidney Disease'), ('epilepsy', 'Epilepsy'), ('tb', 'Tuberculosis'), ('polycythemia', 'Polycythemia Vera'), ('leprosy', 'Leprosy'), ('hepatitis', 'Hepatitis B/C'), ('jaundice', 'Jaundice'), ('malaria', 'Malaria'), ('allergy', 'Allergic Disease'), ('diabetes', 'Diabetes'), ('asthma', 'Asthamactic Disease'), ('schizophrenia', 'Schizophrenia'), ('cancer', 'Cancer/Malignant Disease'), ('abnormalbleed', 'Abnormal Bleeding Tendency'), ('std', 'Sexually Transmitted Disease'), ('typhoid', 'Typhoid(Last 1 year)'), ('fainting', 'Fainting Spells'), ('hormonalimbal', 'Any Hormomal Imbalance')], max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Taken24h',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('val', models.CharField(blank=True, choices=[('antibiotics', 'Antibiotics'), ('steroids', 'Steroids'), ('aspirin', 'Aspirin'), ('vaccine', 'Vaccination'), ('alcohol', 'Alcohol'), ('dogbite', 'Dog Bite/Rabies Vaccine(1 year)'), ('bpmed', 'B.P. Medicine/Anti-depressant')], max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Women',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('val', models.CharField(blank=True, choices=[('pregnant', 'Are you pregnant'), ('abortion_in_3_months', 'Have you had an abortion in the last three months'), ('childlessthan1yr', 'Do you have a child less than 1 year old'), ('childbreastfeed', 'Is the Child still breast feeding'), ('periods', 'Are you having your periods today')], max_length=40, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='blooddonation',
            name='disease_last_6_months',
            field=models.ManyToManyField(blank=True, to='redcrossmain.Disease6m'),
        ),
        migrations.AddField(
            model_name='blooddonation',
            name='for_women',
            field=models.ManyToManyField(blank=True, to='redcrossmain.Women'),
        ),
        migrations.AddField(
            model_name='blooddonation',
            name='suffered_any_of_these',
            field=models.ManyToManyField(blank=True, to='redcrossmain.Suffered'),
        ),
        migrations.AddField(
            model_name='blooddonation',
            name='taken_following_in_last_24_hrs',
            field=models.ManyToManyField(blank=True, to='redcrossmain.Taken24h'),
        ),
    ]
